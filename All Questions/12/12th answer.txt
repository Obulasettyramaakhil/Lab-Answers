//Write program to search (any method) the number from a given list using the Remote Method Invocation (RMI) mechanism.

//Server.java
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.server.UnicastRemoteObject;

class RMIDemoImpl extends UnicastRemoteObject implements RMIDemoInterface{
 	static final long serialVersionUID = 1L;
	protected RMIDemoImpl() throws RemoteException {
		super();
	}

	@Override
	public String sayHello() throws RemoteException {
		return "Hello Client! Welcome:";
	}

	@Override
	public int search(int arr[], int n, int x) throws RemoteException {
		for(int i=0;i<n;i++)
        		{
            			if(arr[i]==x)
            			{
                				return 1;
            			}
		}
		return -1;
	}
}
public class RMIDemoServer {
	public static void main(String[] args) {
		try {
			RMIDemoInterface rmiDemoObject = new RMIDemoImpl();
			LocateRegistry.createRegistry(1099);
			Naming.rebind("rmiDemoObject",rmiDemoObject);
		} catch (RemoteException e) {
			e.printStackTrace();
		} catch (MalformedURLException e) {
			e.printStackTrace();
		}
	}

}

//interface.java
import java.rmi.Remote;
import java.rmi.RemoteException;


public interface RMIDemoInterface extends Remote{
	public String sayHello() throws RemoteException;
	public int search(int arr[], int n, int x) throws RemoteException;
}


//Client.java
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.util.ArrayList;


public class RMIDemoClient {
	public static void main(String[] args) {
		String url= "rmi://localhost:1099/rmiDemoObject";
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		try {
			RMIDemoInterface remoteIntf = (RMIDemoInterface) Naming.lookup(url);
			System.out.println(remoteIntf.sayHello());
			System.out.println("Enter n number:");
			System.out.print("n: ");
			int n = Integer.parseInt(br.readLine());
			System.out.println("Enter the array");
			int arr[] = new int[n];
			for(int i = 0; i < n; i++)
			{
				arr[i] = Integer.parseInt(br.readLine());
			}
			System.out.println("Enter searching number:");
			System.out.print("x: ");
			int x = Integer.parseInt(br.readLine());
			int ans = remoteIntf.search(arr, n, x);
			if(ans == 1)
			{
				System.out.println("Present");
			}
			else
			{
				System.out.println("Not present");
			}
			
		} catch (MalformedURLException | RemoteException | NotBoundException e) {
			e.printStackTrace();
		} catch (NumberFormatException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

}